#! / bin / bash
clear
echo -e " \ E [44; 1; 37m INFORMACOES DO VPS \ E [0m "
echo  " "
if [ -f / etc / lsb-release]
then
echo -e " \ 033 [1; 31m • \ 033 [1; 32m OPERATIONAL SYSTEM \ 033 [1; 31m • \ 033 [0m "
echo  " "
name = $ ( cat / etc / lsb-release | grep DESCRIPTION | awk -F = { ' print $ 2 ' } )
codename = $ ( cat / etc / lsb-release | grep CODENAME | awk -F = { ' print $ 2 ' } )
echo -e " \ 033 [1; 33mNome: \ 033 [1; 37m $ name "
echo -e " \ 033 [1; 33mCodeName: \ 033 [1; 37m $ codename "
echo -e " \ 033 [1; 33mKernel: \ 033 [1; 37m $ ( uname -s ) "
echo -e " \ 033 [1; 33mKernel Release: \ 033 [1; 37m $ ( uname -r ) "
if [ -f / etc / os-release]
then
devlike = $ ( cat / etc / os-release | grep LIKE | awk -F = { ' print $ 2 ' } )
echo -e " \ 033 [1; 33m Derived from OS: \ 033 [1; 37m $ devlike "
echo  " "
fi
else
system = $ ( cat /etc/issue.net )
echo -e " \ 033 [1; 31m • \ 033 [1; 32m OPERATIONAL SYSTEM \ 033 [1; 31m • \ 033 [0m "
echo  " "
echo -e " \ 033 [1; 33mNome: \ 033 [1; 37m $ system "
echo  " "
fi

if [ -f / proc / cpuinfo]
then
usage = $ ( top -bn1 | awk ' / Cpu / {cpu = "" 100 - $ 8 "%"}; END {print cpu} ' )
echo -e " \ 033 [1; 31m • \ 033 [1; 32mPROCESSADOR \ 033 [1; 31m • \ 033 [0m "
echo  " "
model = $ ( cat / proc / cpuinfo | grep " model name "  | uniq | awk -F : { ' print $ 2 ' } )
cpucores = $ ( grep -c cpu [0-9] / proc / stat )
cache = $ ( cat / proc / cpuinfo | grep " cache size "  | uniq | awk -F : { ' print $ 2 ' } )
echo -e " \ 033 [1; 33mModel: \ 033 [1; 37m $ model "
echo -e " \ 033 [1; 33mNuclei: \ 033 [1; 37m $ cpucores "
echo -e " \ 033 [1; 33mMemory Cache: \ 033 [1; 37m $ cache "
echo -e " \ 033 [1; 33mArch: \ 033 [1; 37m $ ( uname -p ) "
echo -e " \ 033 [1; 33multilizacao: \ 033 [37m $ use "
echo  " "
else
echo -e " \ 033 [1; 32mPROCESSADOR \ 033 [0m "
echo  " "
echo  " I am not able to obtain information "
fi

if free 1> / dev / null 2> / dev / null
then
ram1 = $ ( free -h | grep -i mem | awk { ' print $ 2 ' } )
ram2 = $ ( free -h | grep -i mem | awk { ' print $ 4 ' } )
ram3 = $ ( free -h | grep -i mem | awk { ' print $ 3 ' } )
useram = $ ( free -m | awk ' NR == 2 {printf "% .2f %% \ t \ t", $ 3 * 100 / $ 2} ' )

echo -e " \ 033 [1; 31m • \ 033 [1; 32m RAM MEMORY \ 033 [1; 31m • \ 033 [0m "
echo  " "
echo -e " \ 033 [1; 33mTotal: \ 033 [1; 37m $ ram1 "
echo -e " \ 033 [1; 33mEm Usage: \ 033 [1; 37m $ ram3 "
echo -e " \ 033 [1; 33mLivre: \ 033 [1; 37m $ ram2 "
echo -e " \ 033 [1; 33multilizacao: \ 033 [37m $ usoram "
echo  " "
else
echo -e " \ 033 [1; 32m RAM MEMORY \ 033 [0m "
echo  " "
echo  " I am not able to obtain information "
fi
[[ !  -e / bin / versao]] && rm -rf / etc / SSHPlus
echo -e " \ 033 [1; 31m • \ 033 [1; 32mSERVICOS EM EXECUCAO \ 033 [1; 31m • \ 033 [0m "
echo  " "
PT = $ ( lsof -V -i tcp -P -n | grep -v " ESTABLISHED "  | grep -v " COMMAND "  | grep " LISTEN " )
for  porta  in  ` echo -e " $ PT "  | cut -d: -f2 | cut -d '  ' -f1 | uniq ` ;  do
    svcs = $ ( echo -e " $ PT "  | grep -w " $ porta "  | awk ' {print $ 1} '  | uniq )
    echo -e " \ 033 [1; 33mServico \ 033 [1; 37m $ svcs \ 033 [1; 33mPorta \ 033 [1; 37m $ porta "
done
